name: "tests"

on:
  push:
    branches:
      - "master"
  pull_request:

jobs:
  phpstan:
    name: "PHPStan"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.3"
          extensions: "curl, soap"
          tools: "composer:v2"

      - name: "Check Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "--prefer-dist"

      - name: "Execute static analysis"
        run: "composer run-script phpstan"

  lint:
    name: "PHP-CS-Fixer"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.3"
          extensions: "curl, soap"
          tools: "composer:v2"

      - name: "Check Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "--prefer-dist"

      - name: "Execute linting"
        run: "composer run-script lint"

  tests:
    strategy:
      fail-fast: true
      matrix:
        php:
          - "7.2"
          - "7.3"
          - "7.4"
        stability:
          - "stable"
        dependencies:
          - "lowest"
          - "highest"

    name: "Tests PHP ${{ matrix.php }} ${{ matrix.stability}} ${{matrix.dependencies}}"

    runs-on: "ubuntu-latest"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 10

      - name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php }}"
          extensions: "curl, soap"
          tools: "composer:v2"
          coverage: "pcov"
      - name: "Enforce using stable dependencies"
        run: "composer config minimum-stability stable"
        if: "${{ matrix.stability == 'stable' }}"

      - name: "Check Composer configuration"
        run: "composer validate --strict"

      - name: "Install dependencies"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--prefer-dist -o"

      - name: "Execute tests"
        run: "vendor/bin/phpunit --coverage-clover=coverage.clover"

      - name: "Upload Scrutinizer coverage"
        uses: "sudo-bot/action-scrutinizer@latest"
        if: "always()" # always run even if the previous step fails
        with:
          cli-args: "--format=php-clover coverage.clover"
